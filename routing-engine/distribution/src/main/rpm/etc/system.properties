#
# The properties defined in this file will be made available through system
# properties at the very beginning of the FAS boot process.
#

# Log level when the pax-logging service is not available
# This level will only be used while the pax-logging service bundle
# is not fully available.
# To change log levels, please refer to the org.ops4j.pax.logging.cfg file
# instead.
org.ops4j.pax.logging.DefaultServiceLog.level=ERROR

#
# Name of this custom instance.
#
karaf.name=vnet.sms.routing-engine/distribution-1.0.0-SNAPSHOT

karaf.work=/var/lib/routing-engine-${project.version}

#
# Where our runtime state is to be stored
#
karaf.data=${karaf.work}/data

#
# Default repository where bundles will be loaded from before using
# other maven repositories. For the full Maven configuration, see the
# org.ops4j.pax.url.mvn.cfg file.
#
karaf.default.repository=system

#
# Location of a shell script that will be run when starting a shell
# session. This script can be used to create aliases and define
# additional commands.
#
karaf.shell.init.script=/etc/routing-engine-${project.version}/shell.init.script

#
# Default role name used for console authorization (JMX, SSH and WEB)
# The syntax is the following:
#   [classname:]principal
# where classname is the class name of the principal object
# (defaults to org.apache.karaf.jaas.modules.RolePrincipal)
# and principal is the name of the principal of that class
# (defaults to admin).
#
# Note that this value can be overriden using the various ConfigAdmin
# configurations for JMX, SSH or the WebConsole.
#
karaf.admin.role=admin

#
# Set this empty property to avoid errors when validating xml documents.
#
xml.catalog.files=

#
# Suppress the bell in the console when hitting backspace to many times
# for example
#
jline.nobell=true

#
# Default port for the OSGi HTTP Service
#
org.osgi.service.http.port=8181

#
# Allow usage of ${routing-engine.home} as an alias for ${karaf.home}
#
routing-engine.home=${karaf.home}

#
# Activemq JMX configuration
#
activemq.jmx.url=service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-${karaf.name}
activemq.jmx.user=karaf
activemq.jmx.password=karaf

#
# Activemq configuration
#
activemq.host = localhost
activemq.openwire.port = 61616
activemq.openwire.url = tcp://${activemq.host}:${activemq.openwire.port}
activemq.stomp.port = 61614
activemq.stomp.url = stomp://${activemq.host}:${activemq.stomp.port}
activemq.queue.incomingMtSms=QUEUE.T1000.INCOMING_MT_SMS
activemq.queue.outgoingMtSmsAck=QUEUE.T1000.OUTGOING_MT_SMS_ACK
activemq.queue.outgoingMtSmsNack=QUEUE.T1000.OUTGOING_MT_SMS_NACK
activemq.queue.outgoingMoSms=QUEUE.T1000.OUTGOING_MO_SMS

#
# Activemq Webconsole configuration
#
webconsole.type=properties
webconsole.jms.url=${activemq.openwire.url}
webconsole.jmx.url=service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-${karaf.name}
webconsole.jmx.user=karaf
webconsole.jmx.password=karaf
